<%- include('../partials/header2.ejs'); %>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.10.3/font/bootstrap-icons.min.css" rel="stylesheet">
    <style>
        /* Estilos gerais */
       /* Estilos gerais */
body {
    background: linear-gradient(to bottom, #6b78ff, #ffffff);
    color: #333; /* Cor do texto ajustada para melhor legibilidade */
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 20px;
}

/* Container principal */
.container {
    background: rgba(255, 255, 255, 0.95); /* Fundo branco com leve transparência */
    border-radius: 15px; /* Aumenta o arredondamento */
    padding: 40px;
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3); /* Sombras mais intensas */
    margin: 20px auto;
    max-width: 800px; /* Limita a largura do container */
    transition: transform 0.3s; /* Animação suave na transformação */
}

.container:hover {
    transform: translateY(-5px); /* Levanta o container ao passar o mouse */
}

/* Títulos */
h1 {
    font-size: 2.8rem;
    margin-bottom: 20px;
    text-align: center;
    color: #4a4a4a; /* Cor do título mais escura para contraste */
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2); /* Sombra no texto para destaque */
}

/* Estilos do formulário */
.form-label {
    font-weight: bold;
    font-size: 1.1rem;
    color: #4a4a4a; /* Cor dos rótulos ajustada */
}

/* Estilos da tabela */
table {
    margin-top: 30px;
    border-collapse: collapse;
    width: 100%;
}

th, td {
    padding: 15px;
    text-align: left;
    font-size: 1rem;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1); /* Linha de separação suave */
}

th {
    background-color: rgba(107, 120, 255, 0.2); /* Azul suave */
    color: #333; /* Cor do texto do cabeçalho */
    font-size: 1.1rem; /* Aumenta a fonte do cabeçalho */
}

tr:nth-child(even) {
    background-color: rgba(255, 255, 255, 0.05);
}

tr:hover {
    background-color: rgba(107, 120, 255, 0.1); /* Efeito hover mais suave e harmonioso */
}

/* Botões */
.btn {
    border-radius: 8px;
    transition: background-color 0.3s, transform 0.2s, box-shadow 0.2s;
    font-weight: bold;
    color: #fff;
}

/* Estilos dos botões de promover e rebaixar */
.btn-promote {
    background-color: #4caf50; /* Verde suave */
}

.btn-promote:hover {
    background-color: #45a049; /* Verde mais escuro */
    transform: scale(1.05);
    box-shadow: 0 4px 10px rgba(0, 128, 0, 0.2); /* Sombra no hover */
}

.btn-demote {
    background-color: #ff9800; /* Laranja suave */
}

.btn-demote:hover {
    background-color: #fb8c00; /* Laranja mais escuro */
    transform: scale(1.05);
    box-shadow: 0 4px 10px rgba(255, 165, 0, 0.2); /* Sombra no hover */
}

/* Responsividade */
@media (max-width: 576px) {
    h1 {
        font-size: 2rem;
    }

    .container {
        padding: 20px;
    }

    th, td {
        padding: 10px;
        font-size: 0.9rem;
    }
}

@media (max-width: 360px) {
    h1 {
        font-size: 1.5rem;
    }

    .form-label {
        font-size: 0.9rem;
    }
}

    </style>
</head>
<body>
    <div style="margin-top: 200px;" class="container">
        <h1><i class="bi bi-people-fill"></i> Gerenciar Usuários</h1>

        <!-- Exibir filtragens apenas para super_admin -->
        <% if (isSuperAdmin) { %>
            <div class="mb-4">
                <label for="comunitySelect" class="form-label"><i class="bi bi-building"></i> Filtrar por Comunidade:</label>
                <select id="comunitySelect" class="form-select">
                    <option value=""><i class="bi bi-arrow-down-circle"></i> Selecione uma Comunidade</option>
                    <% comunidades.forEach(comunidade => { %>
                        <option value="<%= comunidade.id %>"><%= comunidade.nome %></option>
                    <% }); %>
                </select>
                <button class="btn btn-primary mt-2 w-100" onclick="filtrarPorComunidade()">
                    <i class="bi bi-filter"></i> Filtrar
                </button>
            </div>
        <% } %>

        <!-- Campo de busca por nome (exibido para admin e super_admin) -->
        <div class="mb-3">
            <label for="searchUser" class="form-label"><i class="bi bi-search"></i> Buscar por Nome:</label>
            <input type="text" id="searchUser" class="form-control" placeholder="Digite o nome" onkeyup="filtrarPorNome()" />
        </div>

        <!-- Tabela de usuários -->
        <table id="usuariosTable" class="table table-striped table-hover">
            <thead>
                <tr>
                    <th><i class="bi bi-person"></i> Nome</th>
                    <th><i class="bi bi-person-fill"></i> Sobrenome</th>
                    <th><i class="bi bi-person-badge"></i> Tipo de Usuário</th>
                    <th><i class="bi bi-gear"></i> Ações</th>
                </tr>
            </thead>
            <tbody>
                <% usuarios.forEach(usuario => { %>
                    <tr data-comunity-id="<%= usuario.ComunityId %>">
                        <td><%= usuario.pnome %></td>
                        <td><%= usuario.unome %></td>
                        <td><%= usuario.type_user %></td>
                        <td>
                            <% if (usuario.type_user === 'normal') { %>
                                <form action="/admin/promover/<%= usuario.id %>" method="POST">
                                    <button type="submit" class="btn btn-promote w-100">
                                        <i class="bi bi-check-circle-fill"></i> Promover a Admin
                                    </button>
                                </form>
                            <% } else { %>
                                <form action="/admin/rebaixar/<%= usuario.id %>" method="POST">
                                    <button type="submit" class="btn btn-demote w-100">
                                        <i class="bi bi-arrow-down-circle-fill"></i> Rebaixar a Usuário
                                    </button>
                                </form>
                            <% } %>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Função para filtrar usuários por comunidade (filtragem via botão)
        function filtrarPorComunidade() {
            const comunityId = document.getElementById('comunitySelect').value;

            if (comunityId) {
                // Envia o ID da comunidade para o servidor e busca os usuários filtrados
                fetch(`/admin/filtrar-usuarios/${comunityId}`)
                    .then(response => response.json())
                    .then(data => {
                        atualizarTabelaUsuarios(data.usuarios);
                    })
                    .catch(error => console.error('Erro ao filtrar usuários:', error));
            } else {
                // Se nenhuma comunidade for selecionada, buscar todos os usuários
                fetch('/admin/filtrar-usuarios/todos')
                    .then(response => response.json())
                    .then(data => {
                        atualizarTabelaUsuarios(data.usuarios);
                    })
                    .catch(error => console.error('Erro ao carregar todos os usuários:', error));
            }
        }

        // Função para atualizar a tabela com os usuários filtrados
        function atualizarTabelaUsuarios(usuarios) {
            const tabela = document.getElementById('usuariosTable');
            const linhas = tabela.querySelectorAll('tr:not(:first-child)'); // Remove todas as linhas, exceto o cabeçalho
            linhas.forEach(linha => linha.remove());

            // Adiciona as novas linhas filtradas
            usuarios.forEach(usuario => {
                const novaLinha = document.createElement('tr');
                novaLinha.innerHTML = `
                    <td>${usuario.pnome}</td>
                    <td>${usuario.unome}</td>
                    <td>${usuario.type_user}</td>
                    <td>
                        ${usuario.type_user === 'normal' 
                            ? `<form action="/admin/promover/${usuario.id}" method="POST">
                                <button type="submit" class="btn btn-promote"><i class="bi bi-check-circle-fill"></i> Promover a Admin</button>
                               </form>`
                            : `<form action="/admin/rebaixar/${usuario.id}" method="POST">
                                <button type="submit" class="btn btn-demote"><i class="bi bi-arrow-down-circle-fill"> Rebaixar a Usuário</button>
                               </form>`}
                    </td>
                `;
                tabela.appendChild(novaLinha);
            });
        }

        // Função para filtrar usuários por nome (filtragem em tempo real)
        function filtrarPorNome() {
            const searchValue = document.getElementById('searchUser').value.toLowerCase();
            const rows = document.querySelectorAll('#usuariosTable tr:not(:first-child)'); // Exclui o cabeçalho da tabela

            rows.forEach(row => {
                const nome = row.cells[0].textContent.toLowerCase(); // Coluna de nome
                const sobrenome = row.cells[1].textContent.toLowerCase(); // Coluna de sobrenome

                // Mostra a linha se o nome ou sobrenome contiver o valor da busca
                row.style.display = (nome.includes(searchValue) || sobrenome.includes(searchValue)) ? '' : 'none';
            });
        }
    </script>
</body>
</html>
